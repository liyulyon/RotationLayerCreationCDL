{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"CropRotation","provenance":[{"file_id":"1S0XpsFzp-VVln5TY6FnzncS99a9MUO55","timestamp":1639582966070},{"file_id":"1WcpbwrGRGyWa3r9yKjflzkBFRM7zfDkU","timestamp":1638500981866}],"collapsed_sections":[],"mount_file_id":"1WcpbwrGRGyWa3r9yKjflzkBFRM7zfDkU","authorship_tag":"ABX9TyNy0rBUX/0Ym2oIV0XREe41"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","metadata":{"id":"LigbwpQ8Ahjo"},"source":["try to read tif file and count how many crop rotation types there is. the first crop type will be utilized. \n"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"o6cQWdarbL0H","executionInfo":{"status":"ok","timestamp":1642727507799,"user_tz":360,"elapsed":50718,"user":{"displayName":"YU LI","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"00575341658892833857"}},"outputId":"f24ac656-383b-40b3-86e0-dfdd8dab768c"},"source":["#Start by connecting gdrive into the google colab\n","\n","from google.colab import drive\n","\n","drive.mount('/content/gdrive')\n"],"execution_count":1,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/gdrive\n"]}]},{"cell_type":"code","metadata":{"id":"uvF2EW505yFb","executionInfo":{"status":"ok","timestamp":1642727588044,"user_tz":360,"elapsed":1805,"user":{"displayName":"YU LI","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"00575341658892833857"}}},"source":["from PIL import Image\n","im1 = Image.open('/content/gdrive/MyDrive/Colab Notebooks/lu2012_c.tif')\n","im2 = Image.open('/content/gdrive/MyDrive/Colab Notebooks/lu2013_c.tif')\n","im3 = Image.open('/content/gdrive/MyDrive/Colab Notebooks/lu2014_c.tif')\n","im4 = Image.open('/content/gdrive/MyDrive/Colab Notebooks/lu2015_c.tif')\n","im5 = Image.open('/content/gdrive/MyDrive/Colab Notebooks/lu2016_c.tif')\n","im6 = Image.open('/content/gdrive/MyDrive/Colab Notebooks/lu2017_c.tif')\n","im7 = Image.open('/content/gdrive/MyDrive/Colab Notebooks/lu2018_c.tif')\n","im8 = Image.open('/content/gdrive/MyDrive/Colab Notebooks/lu2019_c.tif')\n"],"execution_count":2,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"14NRmheVAy17","executionInfo":{"status":"ok","timestamp":1642727602324,"user_tz":360,"elapsed":169,"user":{"displayName":"YU LI","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"00575341658892833857"}},"outputId":"c7b080e7-5eda-41c0-f0a6-38799eb96318"},"source":["from collections import Counter\n","def constanttest(array):\n","  freq = Counter(array).most_common(1)\n","  count = 0\n","  return freq\n","[(a, b)] = constanttest([2,3,3,3,3,3,4.1,4.1,4.1,4.1,4.1,4.1,4.1,4.1,1.1,2,2.2,2.2])\n","print(a, b)"],"execution_count":4,"outputs":[{"output_type":"stream","name":"stdout","text":["4.1 8\n"]}]},{"cell_type":"code","metadata":{"id":"-zvE5RX2VICp","executionInfo":{"status":"ok","timestamp":1642727604643,"user_tz":360,"elapsed":158,"user":{"displayName":"YU LI","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"00575341658892833857"}}},"source":["import pandas as pd\n","lookup = pd.read_csv('/content/gdrive/MyDrive/Colab Notebooks/baseline_lookup.csv')\n"],"execution_count":5,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":168},"id":"obJJ8QgKZC9Z","executionInfo":{"status":"ok","timestamp":1642727607182,"user_tz":360,"elapsed":177,"user":{"displayName":"YU LI","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"00575341658892833857"}},"outputId":"8dcdd5b1-549d-4aad-d901-667184183f7b"},"source":["print(lookup.loc[lookup['landuse'] == 'CORN'])\n","lookup.loc[lookup['landuse'] == 'WETN']"],"execution_count":6,"outputs":[{"output_type":"stream","name":"stdout","text":["     value landuse\n","1        1    CORN\n","34      44    CORN\n","110    228    CORN\n","123    241    CORN\n"]},{"output_type":"execute_result","data":{"text/html":["\n","  <div id=\"df-30dc9aea-8626-4733-9229-2a93934f2b31\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>value</th>\n","      <th>landuse</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>85</th>\n","      <td>195</td>\n","      <td>WETN</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-30dc9aea-8626-4733-9229-2a93934f2b31')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-30dc9aea-8626-4733-9229-2a93934f2b31 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-30dc9aea-8626-4733-9229-2a93934f2b31');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "],"text/plain":["    value landuse\n","85    195    WETN"]},"metadata":{},"execution_count":6}]},{"cell_type":"code","metadata":{"id":"JnYwPMo6cud2","executionInfo":{"status":"ok","timestamp":1642732031385,"user_tz":360,"elapsed":144,"user":{"displayName":"YU LI","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"00575341658892833857"}}},"source":["import numpy as np\n","[col,row] = np.array(im1).shape\n","ay = np.zeros([9,col,row])\n","ay[0] = np.array(im1)\n","ay[1] = np.array(im2)\n","ay[2] = np.array(im3)\n","ay[3] = np.array(im4)\n","ay[4] = np.array(im5)\n","ay[5] = np.array(im6)\n","ay[6] = np.array(im7)\n","ay[7] = np.array(im8)\n"],"execution_count":42,"outputs":[]},{"cell_type":"markdown","source":["Identify pixels that is constant"],"metadata":{"id":"NZ8Sr3kdhkBB"}},{"cell_type":"code","source":["LU = ay[7].astype(np.int64)\n","un2 = np.zeros(ay[0].shape)\n","co2 = np.zeros(ay[0].shape)\n","rotalist = []\n","croprota = []\n","cons_land = []\n","for colnumber in range(len(ay[0,:,0])):\n","  for rownumber in range(len(ay[0,0,:])):\n","     \n","    [(un2[colnumber, rownumber],co2[colnumber, rownumber])] = constanttest(ay[0:8, colnumber, rownumber])\n","    if co2[colnumber, rownumber] > 6:\n","      LU[colnumber, rownumber] = un2[colnumber, rownumber]\n","      if un2[colnumber, rownumber] != 0:\n","        cons_land.append([colnumber, rownumber])\n","      # give all corn or soybean as tillage no winter cover\n","      \n","    else:\n","      rotalist.append([colnumber, rownumber])\n","      croprota.append(ay[0:8, colnumber, rownumber])\n","    if LU[colnumber, rownumber] == 1:\n","       LU[colnumber, rownumber] = 1001\n","    elif LU[colnumber, rownumber] == 5:\n","       LU[colnumber, rownumber] = 5001\n","un3, co3 = np.unique(croprota, return_counts = True, axis = 0)\n","np.set_printoptions(suppress=True,\n","   formatter={'float_kind':'{:4.0f}'.format}, linewidth=200)\n","numcount = 259\n","print(un3[co3>numcount])\n","print(co3[co3>numcount])\n","print(\"rotation num:\", len(un3),\", pixel num:\",sum(co3))\n","print(\"major rotation num:\", len(un3[co3>numcount]),\", pixel num:\", sum(co3[co3>numcount]))\n"],"metadata":{"id":"j9K3sD73iS6F","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1642732036290,"user_tz":360,"elapsed":3193,"user":{"displayName":"YU LI","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"00575341658892833857"}},"outputId":"44e64a6c-de2c-49db-8631-7df1bc755e44"},"execution_count":43,"outputs":[{"output_type":"stream","name":"stdout","text":["[[   1    1    1    1    1    5    1    5]\n"," [   1    1    1    1    5    1    5    1]\n"," [   1    1    1    5    1    1    5    1]\n"," [   1    1    1    5    1    5    1    5]\n"," [   1    1    5    1    1    1    5    1]\n"," [   1    1    5    1    1    5    1    1]\n"," [   1    1    5    1    1    5    1    5]\n"," [   1    1    5    1    5    1    1    1]\n"," [   1    1    5    1    5    1    5    1]\n"," [   1    5    1    1    1    5    1    1]\n"," [   1    5    1    1    5    1    1    1]\n"," [   1    5    1    1    5    1    1    5]\n"," [   1    5    1    1    5    1    1   53]\n"," [   1    5    1    1    5    1    5    1]\n"," [   1    5    1    5    1    1    5    1]\n"," [   1    5    1    5    1    5    1    1]\n"," [   1    5    1    5    1    5    1    5]\n"," [   1    5   24    1    5    1    5    1]\n"," [   1   24    1    5    1    1    5    1]\n"," [   5    1    1    1    1    5    1    1]\n"," [   5    1    1    5    1    1    5    1]\n"," [   5    1    5    1    1    5    1    1]\n"," [   5    1    5    1    1    5    1    5]\n"," [   5    1    5    1    5    1    1    5]\n"," [   5    1    5    1    5    1    5    1]\n"," [   5   24    1    5    1    5    1    5]\n"," [  12    1    1    5    1    1    5   53]\n"," [  24    1    1    1    5    1    1    5]\n"," [  53    1    5    1    1    5   53    1]\n"," [  53    1    5    1    1    5   53   24]]\n","[ 472  566  420  391  361  956  324  546  588  634  396  553  275  346  466  768 1445  334  520  315  558  615  271  572  850  504  271  570  260  312]\n","rotation num: 14998 , pixel num: 69087\n","major rotation num: 30 , pixel num: 15459\n"]}]},{"cell_type":"code","source":["len(cons_land)*31.2*31.2/1000000\n","260*31.2*31.2/1000000\n","print(len(croprota),len(rotalist), 15400*31*31/1000000)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"AXDW0urTOR1R","executionInfo":{"status":"ok","timestamp":1642732040781,"user_tz":360,"elapsed":130,"user":{"displayName":"YU LI","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"00575341658892833857"}},"outputId":"6325b624-0532-4530-9161-ff5b1461cef3"},"execution_count":44,"outputs":[{"output_type":"stream","name":"stdout","text":["69087 69087 14.7994\n"]}]},{"cell_type":"code","source":["import matplotlib.pyplot as plt\n","numcount = 259\n","fig = plt.figure()\n","ax = fig.add_axes([0,0,1,1])\n","students = co3[co3>numcount].flatten()\n","langs = range(len(students))\n","\n","ax.bar(langs,students)\n","plt.xlabel('major rotation id')\n","plt.ylabel('pixel numbers')\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":350},"id":"pYONEkWw8Lnl","executionInfo":{"status":"ok","timestamp":1642732042868,"user_tz":360,"elapsed":298,"user":{"displayName":"YU LI","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"00575341658892833857"}},"outputId":"68bb153c-94e7-470a-ea39-e9f1460d8946"},"execution_count":45,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["co3.flatten()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"2UjTkmGG951Q","executionInfo":{"status":"ok","timestamp":1642732044939,"user_tz":360,"elapsed":126,"user":{"displayName":"YU LI","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"00575341658892833857"}},"outputId":"5c9a6f34-da89-476f-9373-58c2068aea02"},"execution_count":46,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([2, 5, 5, ..., 1, 1, 1])"]},"metadata":{},"execution_count":46}]},{"cell_type":"markdown","metadata":{"id":"Pop7wN_JaeGD"},"source":["Check the major rotation types\n"]},{"cell_type":"code","source":["dfuni = pd.DataFrame(un3[co3>numcount], columns = ['2012', '2013', '2014', '2015', '2016', '2017', '2018', '2019'])\n","\n","\n","result = dfuni.replace(dict(zip(lookup.value, lookup.landuse)))\n","result['pixeln'] = co3[co3>numcount]\n","result = result.sort_values(by=['pixeln'], ascending=False)\n","result\n","# x = np.asarray(df3.merge(lookup).landuse)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":990},"id":"HM8qdP9Q1jCK","executionInfo":{"status":"ok","timestamp":1642732046793,"user_tz":360,"elapsed":142,"user":{"displayName":"YU LI","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"00575341658892833857"}},"outputId":"c829446b-a954-40c8-aa56-105159f2f19e"},"execution_count":47,"outputs":[{"output_type":"execute_result","data":{"text/html":["\n","  <div id=\"df-f3ee3a49-c72c-4fb2-84a3-37039761f7b1\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>2012</th>\n","      <th>2013</th>\n","      <th>2014</th>\n","      <th>2015</th>\n","      <th>2016</th>\n","      <th>2017</th>\n","      <th>2018</th>\n","      <th>2019</th>\n","      <th>pixeln</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>16</th>\n","      <td>CORN</td>\n","      <td>SOYB</td>\n","      <td>CORN</td>\n","      <td>SOYB</td>\n","      <td>CORN</td>\n","      <td>SOYB</td>\n","      <td>CORN</td>\n","      <td>SOYB</td>\n","      <td>1445</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>CORN</td>\n","      <td>CORN</td>\n","      <td>SOYB</td>\n","      <td>CORN</td>\n","      <td>CORN</td>\n","      <td>SOYB</td>\n","      <td>CORN</td>\n","      <td>CORN</td>\n","      <td>956</td>\n","    </tr>\n","    <tr>\n","      <th>24</th>\n","      <td>SOYB</td>\n","      <td>CORN</td>\n","      <td>SOYB</td>\n","      <td>CORN</td>\n","      <td>SOYB</td>\n","      <td>CORN</td>\n","      <td>SOYB</td>\n","      <td>CORN</td>\n","      <td>850</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>CORN</td>\n","      <td>SOYB</td>\n","      <td>CORN</td>\n","      <td>SOYB</td>\n","      <td>CORN</td>\n","      <td>SOYB</td>\n","      <td>CORN</td>\n","      <td>CORN</td>\n","      <td>768</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>CORN</td>\n","      <td>SOYB</td>\n","      <td>CORN</td>\n","      <td>CORN</td>\n","      <td>CORN</td>\n","      <td>SOYB</td>\n","      <td>CORN</td>\n","      <td>CORN</td>\n","      <td>634</td>\n","    </tr>\n","    <tr>\n","      <th>21</th>\n","      <td>SOYB</td>\n","      <td>CORN</td>\n","      <td>SOYB</td>\n","      <td>CORN</td>\n","      <td>CORN</td>\n","      <td>SOYB</td>\n","      <td>CORN</td>\n","      <td>CORN</td>\n","      <td>615</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>CORN</td>\n","      <td>CORN</td>\n","      <td>SOYB</td>\n","      <td>CORN</td>\n","      <td>SOYB</td>\n","      <td>CORN</td>\n","      <td>SOYB</td>\n","      <td>CORN</td>\n","      <td>588</td>\n","    </tr>\n","    <tr>\n","      <th>23</th>\n","      <td>SOYB</td>\n","      <td>CORN</td>\n","      <td>SOYB</td>\n","      <td>CORN</td>\n","      <td>SOYB</td>\n","      <td>CORN</td>\n","      <td>CORN</td>\n","      <td>SOYB</td>\n","      <td>572</td>\n","    </tr>\n","    <tr>\n","      <th>27</th>\n","      <td>WWHT</td>\n","      <td>CORN</td>\n","      <td>CORN</td>\n","      <td>CORN</td>\n","      <td>SOYB</td>\n","      <td>CORN</td>\n","      <td>CORN</td>\n","      <td>SOYB</td>\n","      <td>570</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>CORN</td>\n","      <td>CORN</td>\n","      <td>CORN</td>\n","      <td>CORN</td>\n","      <td>SOYB</td>\n","      <td>CORN</td>\n","      <td>SOYB</td>\n","      <td>CORN</td>\n","      <td>566</td>\n","    </tr>\n","    <tr>\n","      <th>20</th>\n","      <td>SOYB</td>\n","      <td>CORN</td>\n","      <td>CORN</td>\n","      <td>SOYB</td>\n","      <td>CORN</td>\n","      <td>CORN</td>\n","      <td>SOYB</td>\n","      <td>CORN</td>\n","      <td>558</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>CORN</td>\n","      <td>SOYB</td>\n","      <td>CORN</td>\n","      <td>CORN</td>\n","      <td>SOYB</td>\n","      <td>CORN</td>\n","      <td>CORN</td>\n","      <td>SOYB</td>\n","      <td>553</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>CORN</td>\n","      <td>CORN</td>\n","      <td>SOYB</td>\n","      <td>CORN</td>\n","      <td>SOYB</td>\n","      <td>CORN</td>\n","      <td>CORN</td>\n","      <td>CORN</td>\n","      <td>546</td>\n","    </tr>\n","    <tr>\n","      <th>18</th>\n","      <td>CORN</td>\n","      <td>WWHT</td>\n","      <td>CORN</td>\n","      <td>SOYB</td>\n","      <td>CORN</td>\n","      <td>CORN</td>\n","      <td>SOYB</td>\n","      <td>CORN</td>\n","      <td>520</td>\n","    </tr>\n","    <tr>\n","      <th>25</th>\n","      <td>SOYB</td>\n","      <td>WWHT</td>\n","      <td>CORN</td>\n","      <td>SOYB</td>\n","      <td>CORN</td>\n","      <td>SOYB</td>\n","      <td>CORN</td>\n","      <td>SOYB</td>\n","      <td>504</td>\n","    </tr>\n","    <tr>\n","      <th>0</th>\n","      <td>CORN</td>\n","      <td>CORN</td>\n","      <td>CORN</td>\n","      <td>CORN</td>\n","      <td>CORN</td>\n","      <td>SOYB</td>\n","      <td>CORN</td>\n","      <td>SOYB</td>\n","      <td>472</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>CORN</td>\n","      <td>SOYB</td>\n","      <td>CORN</td>\n","      <td>SOYB</td>\n","      <td>CORN</td>\n","      <td>CORN</td>\n","      <td>SOYB</td>\n","      <td>CORN</td>\n","      <td>466</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>CORN</td>\n","      <td>CORN</td>\n","      <td>CORN</td>\n","      <td>SOYB</td>\n","      <td>CORN</td>\n","      <td>CORN</td>\n","      <td>SOYB</td>\n","      <td>CORN</td>\n","      <td>420</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>CORN</td>\n","      <td>SOYB</td>\n","      <td>CORN</td>\n","      <td>CORN</td>\n","      <td>SOYB</td>\n","      <td>CORN</td>\n","      <td>CORN</td>\n","      <td>CORN</td>\n","      <td>396</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>CORN</td>\n","      <td>CORN</td>\n","      <td>CORN</td>\n","      <td>SOYB</td>\n","      <td>CORN</td>\n","      <td>SOYB</td>\n","      <td>CORN</td>\n","      <td>SOYB</td>\n","      <td>391</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>CORN</td>\n","      <td>CORN</td>\n","      <td>SOYB</td>\n","      <td>CORN</td>\n","      <td>CORN</td>\n","      <td>CORN</td>\n","      <td>SOYB</td>\n","      <td>CORN</td>\n","      <td>361</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>CORN</td>\n","      <td>SOYB</td>\n","      <td>CORN</td>\n","      <td>CORN</td>\n","      <td>SOYB</td>\n","      <td>CORN</td>\n","      <td>SOYB</td>\n","      <td>CORN</td>\n","      <td>346</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>CORN</td>\n","      <td>SOYB</td>\n","      <td>WWHT</td>\n","      <td>CORN</td>\n","      <td>SOYB</td>\n","      <td>CORN</td>\n","      <td>SOYB</td>\n","      <td>CORN</td>\n","      <td>334</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>CORN</td>\n","      <td>CORN</td>\n","      <td>SOYB</td>\n","      <td>CORN</td>\n","      <td>CORN</td>\n","      <td>SOYB</td>\n","      <td>CORN</td>\n","      <td>SOYB</td>\n","      <td>324</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>SOYB</td>\n","      <td>CORN</td>\n","      <td>CORN</td>\n","      <td>CORN</td>\n","      <td>CORN</td>\n","      <td>SOYB</td>\n","      <td>CORN</td>\n","      <td>CORN</td>\n","      <td>315</td>\n","    </tr>\n","    <tr>\n","      <th>29</th>\n","      <td>PEAS</td>\n","      <td>CORN</td>\n","      <td>SOYB</td>\n","      <td>CORN</td>\n","      <td>CORN</td>\n","      <td>SOYB</td>\n","      <td>PEAS</td>\n","      <td>WWHT</td>\n","      <td>312</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>CORN</td>\n","      <td>SOYB</td>\n","      <td>CORN</td>\n","      <td>CORN</td>\n","      <td>SOYB</td>\n","      <td>CORN</td>\n","      <td>CORN</td>\n","      <td>PEAS</td>\n","      <td>275</td>\n","    </tr>\n","    <tr>\n","      <th>22</th>\n","      <td>SOYB</td>\n","      <td>CORN</td>\n","      <td>SOYB</td>\n","      <td>CORN</td>\n","      <td>CORN</td>\n","      <td>SOYB</td>\n","      <td>CORN</td>\n","      <td>SOYB</td>\n","      <td>271</td>\n","    </tr>\n","    <tr>\n","      <th>26</th>\n","      <td>SCRN</td>\n","      <td>CORN</td>\n","      <td>CORN</td>\n","      <td>SOYB</td>\n","      <td>CORN</td>\n","      <td>CORN</td>\n","      <td>SOYB</td>\n","      <td>PEAS</td>\n","      <td>271</td>\n","    </tr>\n","    <tr>\n","      <th>28</th>\n","      <td>PEAS</td>\n","      <td>CORN</td>\n","      <td>SOYB</td>\n","      <td>CORN</td>\n","      <td>CORN</td>\n","      <td>SOYB</td>\n","      <td>PEAS</td>\n","      <td>CORN</td>\n","      <td>260</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f3ee3a49-c72c-4fb2-84a3-37039761f7b1')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-f3ee3a49-c72c-4fb2-84a3-37039761f7b1 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-f3ee3a49-c72c-4fb2-84a3-37039761f7b1');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "],"text/plain":["    2012  2013  2014  2015  2016  2017  2018  2019  pixeln\n","16  CORN  SOYB  CORN  SOYB  CORN  SOYB  CORN  SOYB    1445\n","5   CORN  CORN  SOYB  CORN  CORN  SOYB  CORN  CORN     956\n","24  SOYB  CORN  SOYB  CORN  SOYB  CORN  SOYB  CORN     850\n","15  CORN  SOYB  CORN  SOYB  CORN  SOYB  CORN  CORN     768\n","9   CORN  SOYB  CORN  CORN  CORN  SOYB  CORN  CORN     634\n","21  SOYB  CORN  SOYB  CORN  CORN  SOYB  CORN  CORN     615\n","8   CORN  CORN  SOYB  CORN  SOYB  CORN  SOYB  CORN     588\n","23  SOYB  CORN  SOYB  CORN  SOYB  CORN  CORN  SOYB     572\n","27  WWHT  CORN  CORN  CORN  SOYB  CORN  CORN  SOYB     570\n","1   CORN  CORN  CORN  CORN  SOYB  CORN  SOYB  CORN     566\n","20  SOYB  CORN  CORN  SOYB  CORN  CORN  SOYB  CORN     558\n","11  CORN  SOYB  CORN  CORN  SOYB  CORN  CORN  SOYB     553\n","7   CORN  CORN  SOYB  CORN  SOYB  CORN  CORN  CORN     546\n","18  CORN  WWHT  CORN  SOYB  CORN  CORN  SOYB  CORN     520\n","25  SOYB  WWHT  CORN  SOYB  CORN  SOYB  CORN  SOYB     504\n","0   CORN  CORN  CORN  CORN  CORN  SOYB  CORN  SOYB     472\n","14  CORN  SOYB  CORN  SOYB  CORN  CORN  SOYB  CORN     466\n","2   CORN  CORN  CORN  SOYB  CORN  CORN  SOYB  CORN     420\n","10  CORN  SOYB  CORN  CORN  SOYB  CORN  CORN  CORN     396\n","3   CORN  CORN  CORN  SOYB  CORN  SOYB  CORN  SOYB     391\n","4   CORN  CORN  SOYB  CORN  CORN  CORN  SOYB  CORN     361\n","13  CORN  SOYB  CORN  CORN  SOYB  CORN  SOYB  CORN     346\n","17  CORN  SOYB  WWHT  CORN  SOYB  CORN  SOYB  CORN     334\n","6   CORN  CORN  SOYB  CORN  CORN  SOYB  CORN  SOYB     324\n","19  SOYB  CORN  CORN  CORN  CORN  SOYB  CORN  CORN     315\n","29  PEAS  CORN  SOYB  CORN  CORN  SOYB  PEAS  WWHT     312\n","12  CORN  SOYB  CORN  CORN  SOYB  CORN  CORN  PEAS     275\n","22  SOYB  CORN  SOYB  CORN  CORN  SOYB  CORN  SOYB     271\n","26  SCRN  CORN  CORN  SOYB  CORN  CORN  SOYB  PEAS     271\n","28  PEAS  CORN  SOYB  CORN  CORN  SOYB  PEAS  CORN     260"]},"metadata":{},"execution_count":47}]},{"cell_type":"markdown","source":["Seems like the corn-soybean rotation continue until the 90th rotation. in that case, using the most frequent crop type is not appropriate for the current situation. Maybe still try the most recent data for this situation. Which is the same as the dairy rotation map.\n","\n","So, if the land is under rotation, this program gives the land for the most recent land. If the land is relatively more consistant (like 6 years of the land is the same type), giving the land for this consistant land.\n","\n","This dataset can be extend to more land use rotation types but it is not appropriate for all detailed information. If the HRU definition doesn't have limitation, it will be possible to deal with the detailed situation. \n","\n"],"metadata":{"id":"mfjYHDrmIpDU"}},{"cell_type":"markdown","source":["Let's only consider the top 30 crop rotations and assign the rest pixel to the most recent data"],"metadata":{"id":"pg828nKYTZsD"}},{"cell_type":"code","source":["import matplotlib.pyplot as plt\n","numcount = 259\n","fig = plt.figure()\n","ax = fig.add_axes([0,0,1,1])\n","sortedcount = np.asarray(result['pixeln'])\n","students = sortedcount.flatten()\n","langs = range(len(students))\n","\n","ax.bar(langs,students)\n","plt.xlabel('major rotation id')\n","plt.ylabel('pixel numbers')\n","plt.show()\n","\n","\n","fig = plt.figure()\n","ax = fig.add_axes([0,0,1,1])\n","sortedcount = np.asarray(result['pixeln'][0:30])\n","students = sortedcount.flatten()\n","langs = range(len(students))\n","\n","ax.bar(langs,students)\n","plt.xlabel('major rotation id')\n","plt.ylabel('pixel numbers')\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":683},"id":"doZqzc3INFQL","executionInfo":{"status":"ok","timestamp":1642732050454,"user_tz":360,"elapsed":556,"user":{"displayName":"YU LI","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"00575341658892833857"}},"outputId":"45272dd6-e7e7-43d4-c8b9-b3c398d6e5d6"},"execution_count":48,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"needs_background":"light"}},{"output_type":"display_data","data":{"image/png":"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\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["majorrota_list = un3[co3>numcount]\n","croprota1 = croprota\n","rotalist1 = rotalist\n","k = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]\n","for i in range(len(croprota1)):\n","  for j in range(30):\n","    if (croprota1[i] == majorrota_list[j]).all():\n","      [col_crota,row_crota] = rotalist1[i]\n","      LU[col_crota, row_crota] = 600+j\n","      k[j] = k[j]+1\n","\n","np.amax(LU)\n","\n"],"metadata":{"id":"84bxft-GYnTK","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1642732059978,"user_tz":360,"elapsed":6929,"user":{"displayName":"YU LI","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"00575341658892833857"}},"outputId":"e13e70d2-0116-4fe5-f22c-845e6651fc1b"},"execution_count":49,"outputs":[{"output_type":"execute_result","data":{"text/plain":["5001"]},"metadata":{},"execution_count":49}]},{"cell_type":"code","source":["for col1 in range(len(LU[:,0])):\n","  for row1 in range(len(LU[0,:])):\n","    if LU[col1, row1] == 1:\n","      print(1)\n","    elif LU[col1, row1] == 5:\n","      print(5)"],"metadata":{"id":"JLk1kcQFa4K3","executionInfo":{"status":"ok","timestamp":1642732076973,"user_tz":360,"elapsed":327,"user":{"displayName":"YU LI","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"00575341658892833857"}}},"execution_count":50,"outputs":[]},{"cell_type":"code","source":["from osgeo import gdal\n","\n","#1.    \n","tiff_file = gdal.Open('/content/gdrive/MyDrive/Colab Notebooks/lu2019_c.tif')\n","#2.\n","geotransform = tiff_file.GetGeoTransform()\n","projection = tiff_file.GetProjection()\n","band = tiff_file.GetRasterBand(1)    \n","xsize = band.XSize\n","ysize = band.YSize\n","\n","#5.\n","driver = gdal.GetDriverByName('GTiff')\n","new_tiff = driver.Create('/content/gdrive/MyDrive/Colab Notebooks/rotationCrop.tif',xsize,ysize,1,gdal.GDT_Float64)\n","new_tiff.SetGeoTransform(geotransform)\n","new_tiff.SetProjection(projection)\n","new_tiff.GetRasterBand(1).WriteArray(LU)\n","new_tiff.FlushCache() #Saves to disk \n","new_tiff = None #closes the file"],"metadata":{"id":"Knyek8znU-AZ","executionInfo":{"status":"ok","timestamp":1642732079768,"user_tz":360,"elapsed":142,"user":{"displayName":"YU LI","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"00575341658892833857"}}},"execution_count":51,"outputs":[]},{"cell_type":"markdown","source":["## Write Operation Schedule"],"metadata":{"id":"ZkAf2driZR_8"}},{"cell_type":"code","source":["pidchecktable = pd.read_csv('/content/gdrive/MyDrive/Colab Notebooks/OperationSchedule.csv')\n","a = pidchecktable.loc[pidchecktable['CPNM'] == 'SOYB','ICNUM'].values[0]\n","print(a)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"maaEzzti7WLv","executionInfo":{"status":"ok","timestamp":1642727673793,"user_tz":360,"elapsed":205,"user":{"displayName":"YU LI","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"00575341658892833857"}},"outputId":"834feb6f-75b5-4012-dd99-1811c9e07027"},"execution_count":17,"outputs":[{"output_type":"stream","name":"stdout","text":["56\n"]}]},{"cell_type":"code","source":["# define the rotation needed functions\n","\n","\n","def plant(data, sid, crop, year, optnum):\n","  df = pd.DataFrame()\n","  df['SID'] = [sid]\n","  df['CROP'] = [crop]\n","  df['YEAR'] = [year]\n","  df['MGT_OP'] = [1] # plant\n","  pid = pidchecktable.loc[pidchecktable['CPNM'] == crop,'ICNUM'].values[0]\n","  if crop == 'CORN':\n","    heatunit = 2200 \n","    # May 15 to Oct 13\n","    # May 1 to September 30, 2200, so 2200 \n","    #  fit with https://agrigold.com/agronomy/crop-growth-development/heat-units-and-corn-maturity/ \n","    pid = 19\n","    df['MONTH'] = [5]\n","    df['DAY'] = [15]\n","  elif crop == 'SOYB':\n","    heatunit = 2153\n","    # May 15 to Oct 7\n","    # 2200 - 6.8*7 = 2153\n","    pid = 56\n","    df['MONTH'] = [5]\n","    df['DAY'] = [15]\n","  elif crop == 'SCRN':\n","    heatunit = 2200\n","    df['MONTH'] = [5]\n","    df['DAY'] = [15]    \n","    # May 15 to Oct 13\n","    # use the same date as corn grain\n","  elif crop == 'PEAS':\n","    heatunit = 733\n","    df['MONTH'] = [5]\n","    df['DAY'] = [20]\n","    # May 20 to July 15\n","    # 2200/3=733\n","  else:# RYE/WWHT\n","    heatunit = 1800\n","    df['MONTH'] = [10]\n","    df['DAY'] = [14]\n","  df['HEATUNITS'] = heatunit\n","  df['PLANT_ID'] = [pid]\n","  df['WSTRS_ID'] = [1]\n","  df['AFERT_ID'] = [1]\n","  df['CFRT_ID'] = [1]\n","  df['CPST_ID'] = [1]\n","  df['OP_NUM'] = [optnum]\n","  return data.append(df)\n","\n","# FERTILIZER FOR corn or soybeans\n","def fert(data, sid, crop, year, optnum):\n","  df = pd.DataFrame()\n","  df['SID'] = [sid]\n","  df['YEAR'] = [year]\n","  df['MONTH'] = [5]\n","  df['DAY'] = [15]\n","  df['MGT_OP'] = [3] # FERTILIZER APPLICATION\n","  df['FERT_ID'] = [27]\n","  if crop == 'CORN':\n","    kg = 98.9\n","  elif crop == 'SCRN':\n","    kg = 49.5\n","  elif crop == 'WWHT':\n","    kg = 98.9\n","    df['MONTH'] = [10]\n","    df['DAY'] = [15]\n","  elif crop == 'PEAS':\n","    df['MONTH'] = [5]\n","    df['DAY'] = [21]\n","    kg = 49.5\n","  else:#soybean\n","    kg = 65.9\n","  df['FRT_KG'] = [kg]\n","  df['FRT_SURFACE'] = [0.8]\n","  df['WSTRS_ID'] = [1]\n","  df['AFERT_ID'] = [1]\n","  df['CFRT_ID'] = [1]\n","  df['CPST_ID'] = [1]\n","  df['OP_NUM'] = [optnum] \n","  return data.append(df)\n","\n","#tillage function for corn, soybean and winter wheat\n","def tillage(data, sid, year, optnumber):\n","  df = pd.DataFrame()\n","  df['SID'] = [sid]\n","  df['YEAR'] = [year]\n","  df['MONTH'] = [10]\n","  df['DAY'] = [14]\n","  df['MGT_OP'] = [6] # tillage\n","  df['TILLAGE_ID'] = [58] # chisel plow\n","  df['WSTRS_ID'] = [1]\n","  df['AFERT_ID'] = [1]\n","  df['CFRT_ID'] = [1]\n","  df['CPST_ID'] = [1]\n","  df['OP_NUM'] = [optnumber]\n","  return data.append(df)\n","def tillagepea(data, sid, year, optnumber):\n","  df = pd.DataFrame()\n","  df['SID'] = [sid]\n","  df['YEAR'] = [year]\n","  df['MONTH'] = [5]\n","  df['DAY'] = [19]\n","  df['MGT_OP'] = [6] # tillage\n","  df['TILLAGE_ID'] = [6] # field cultivator Ge15ft (Baugart's report \n","# and https://dnr.wi.gov/topic/TMDLs/documents/UFW/UFWBSWATReport20180426.pdf)\n","  df['WSTRS_ID'] = [1]\n","  df['AFERT_ID'] = [1]\n","  df['CFRT_ID'] = [1]\n","  df['CPST_ID'] = [1]\n","  df['OP_NUM'] = [optnumber]\n","  return data.append(df)\n","\n","\n","def harvest(data, sid, crop, year, optnum):\n","  df = pd.DataFrame()\n","  df['SID'] = [sid]\n","  df['CROP'] = [crop]\n","  df['YEAR'] = [year]\n","  if crop == 'CORN':\n","    # May 15 to Oct 13\n","    df['MONTH'] = [10]\n","    df['DAY'] = [13]\n","  elif crop == 'SOYB':\n","    # May 15 to Oct 7\n","    df['MONTH'] = [10]\n","    df['DAY'] = [7]\n","  elif crop == 'CSIL':\n","    df['MONTH'] = [9]\n","    df['DAY'] = [20]    \n","    # May 15 to Sep 20\n","  elif crop == 'PEAS':\n","    df['MONTH'] = [7]\n","    df['DAY'] = [15]\n","    # May 20 to July 15\n","  else: # winter wheat\n","    df['MONTH'] = [7]\n","    df['DAY'] = [26]\n","  df['MGT_OP'] = [5] # harvest\n","  df['WSTRS_ID'] = [1]\n","  df['AFERT_ID'] = [1]\n","  df['CFRT_ID'] = [1]\n","  df['CPST_ID'] = [1]\n","  df['OP_NUM'] = [optnum]\n","  return data.append(df)"],"metadata":{"id":"uhhJ_l9IgsFC","executionInfo":{"status":"ok","timestamp":1642727675482,"user_tz":360,"elapsed":153,"user":{"displayName":"YU LI","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"00575341658892833857"}}},"execution_count":18,"outputs":[]},{"cell_type":"code","source":["def cornsoybtillyear(data, crop, sid, year):\n","  data = plant(data, sid, crop, year, 1)\n","  data = fert(data, sid, crop, year, 2)\n","  data = harvest(data, sid, crop, year, 3)\n","  data = tillage(data, sid, year, 4)\n","  optnum = 5\n","  return data, optnum\n","def cornsoybnotillyear(data, crop, sid, year):\n","  data = plant(data, sid, crop, year, 1)\n","  data = fert(data, sid, crop, year, 2)\n","  data = harvest(data, sid, crop, year, 3)\n","  optnum = 4\n","  return data\n","def cornsoybnotillwwcoveryear(data, crop, sid, year):\n","  data = plant(data, sid, crop, year, 1)\n","  data = fert(data, sid, crop, year, 2)\n","  data = harvest(data, sid, crop, year, 3)\n","  data = plant(data, sid, 'WWHT', year, 4)\n","  return data\n","def cornsoybnotillryecoveryear(data, crop, sid, year):\n","  data = plant(data, sid, crop, year, 1)\n","  data = fert(data, sid, crop, year, 2)\n","  data = harvest(data, sid, crop, year, 3)\n","  data = plant(data, sid, 'RYE', year, 4)\n","  return data\n","def winterwheattillyear(data, crop, sid, year, optnum):\n","  data = plant(data, sid, crop, year - 1, optnum)\n","  data = harvest(data, sid, crop, year, 1)\n","  data = fert(data, sid, crop, year, 2)\n","  data = tillage(data, sid, year, 3)\n","  return data\n","def winterwheatnotillyear(data, crop, sid, year):\n","  data = harvest(data, sid, crop, year, 1)\n","  data = fert(data, sid, crop, year, 2)\n","  data = plant(data, sid, crop, year, 3)\n","  return data\n","\n","def peasyear(data, crop, sid, year):\n","  data = tillagepea(data, sid, year, 1)\n","  data = plant(data, sid, crop, year, 2)\n","  data = fert(data, sid, crop, year, 3)\n","  data = harvest(data, sid, crop, year, 4)\n","  optnum = 5\n","  return data, optnum\n","\n","\n","# write the cornsoybyear (corn, soybean, output with optnum);\n","# winterwheatyear, peasyear (output with optnum)"],"metadata":{"id":"v4KKXfX9gm8D","executionInfo":{"status":"ok","timestamp":1642727681684,"user_tz":360,"elapsed":233,"user":{"displayName":"YU LI","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"00575341658892833857"}}},"execution_count":19,"outputs":[]},{"cell_type":"markdown","source":["Use the predefined functions: cornsoybtillyear, cornsoybnotillyear, cornsoybnotillwwcoveryear, cornsoybnotillryecoveryear, winterwheattillyear, winterwheatnotillyear, peasyear"],"metadata":{"id":"1wnpdSItgDjM"}},{"cell_type":"code","source":["# set a array for record\n","import pandas as pd\n","data = pd.DataFrame(columns = ['SID','SUBBASIN','HRU','LANDUSE','SOIL',\n","                             'SLOPE_CD','CROP','YEAR','MONTH','DAY',\n","                             'HUSC','MGT_OP','HEATUNITS','PLANT_ID',\n","                             'CURYR_MAT','LAI_INIT','BIO_INIT','HI_TARG',\n","                             'BIO_TARG','CNOP','IRR_AMT','FERT_ID','FRT_KG',\n","                             'FRT_SURFACE','PEST_ID','PST_KG','TILLAGE_ID',\n","                             'HARVEFF','HI_OVR','GRZ_DAYS','MANURE_ID',\n","                             'BIO_EAT','BIO_TRMP','MANURE_KG','WSTRS_ID',\n","                             'AUTO_WSTRS','AFERT_ID','AUTO_NSTRS','AUTO_NAPP',\n","                             'AUTO_NYR','AUTO_EFF','AFRT_SURFACE','SWEEPEFF',\n","                             'FR_CURB','IMP_TRIG','FERT_DAYS','CFRT_ID',\n","                             'IFRT_FREQ','CFRT_KG','PST_DEP','IHV_GBM',\n","                             'IRR_SALT','IRR_EFM','IRR_SQ','IRR_EFF','IRR_MX',\n","                             'IRR_ASQ','CPST_ID','PEST_DAYS','IPEST_FREQ',\n","                             'CPST_KG','BURN_FRLB','OP_NUM','IRR_SC','IRR_NO',\n","                             'IRR_SCA','IRR_NOA'])\n","print(data)\n","\n","majorrota_crop = pd.DataFrame(majorrota_list, columns = ['2012', '2013', '2014', '2015', '2016', '2017', '2018', '2019'])\n","majorrota_crop = majorrota_crop.replace(dict(zip(lookup.value, lookup.landuse)))\n","sidcroproation = [ 'CR16','CR10','CR18','CR20','CR21','CRT2','CR24','CR13',\n","                   'CRT7','CRT5','CR19','CR12','CR27','CR22','CR17','CRT4','CRT1',\n","                   'CR23','CR14','CR25','CR11','CRT6','CR28','CRT8','CRT3','CR15',\n","                   'CR29','CRT9','CR30','CR26']\n","                  # crop rotation 1 to 30 in document\n","# rearrange the year number to start from warmup period\n","warmupinclude = ['2018', '2019', '2012', '2013', '2014', '2015', '2016', '2017']\n","cornsoyb = ['CORN', 'SOYB', 'SCRN']\n","notillyear = ['CRT1', 'CRT2', 'CRT3', 'CRT4', 'CRT5', 'CRT6', 'CRT7', 'CRT8', \n","              'CR10', 'CR11', 'CR12', 'CR13', 'CR16', 'CR17', \n","              'CR18', 'CR19', 'CR20', 'CR21', 'CR22']\n","# NOTE THAT RYE COVER rotation IS CR17\n","wwhtcoverrota = ['CR9', 'CR14', 'CR15']\n","optnum = 0\n","for j in range(30):\n","  optyear = 0\n","  # start from the first year of the warmup period 2018\n","  for year_column in warmupinclude:\n","    optyear = optyear + 1\n","    croptype = majorrota_crop.iloc[[j]][year_column].values[0]\n","    sid = sidcroproation[j]\n","    if sid == 'CR17': # rye cover, no till\n","      data = cornsoybnotillryecoveryear(data, croptype, sid, optyear)\n","      continue\n","    if sid in wwhtcoverrota: # winter wheat, no till\n","      if croptype in cornsoyb:\n","        data = cornsoybnotillwwcoveryear(data, croptype, sid, optyear)\n","      else: #wwht\n","        data = winterwheatnotillyear(data, croptype, sid, optyear)\n","      continue\n","    if sid in notillyear: # no till, all soyb or corn\n","      data = cornsoybnotillyear(data, croptype, sid, optyear)\n","    else: # till year\n","      # for year has corn, sweetcorn or soybean\n","      if croptype in cornsoyb:\n","        data, optnum = cornsoybtillyear(data, croptype, sid, optyear)\n","      elif croptype == 'PEAS':\n","        data, optnum = peasyear(data, croptype, sid, optyear)\n","      elif croptype == 'WWHT':\n","        data = winterwheattillyear(data, croptype, sid, optyear, optnum)\n","data, OPTnouse = cornsoybtillyear(data, 'CORN', 'CRN2', 1)\n","data, OPTnouse = cornsoybtillyear(data, 'SOYB', 'SYB2', 1)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"vP1-XWlWgDy8","executionInfo":{"status":"ok","timestamp":1642727950460,"user_tz":360,"elapsed":11665,"user":{"displayName":"YU LI","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"00575341658892833857"}},"outputId":"7b170031-3427-47db-e2ae-8bef943a4e88"},"execution_count":21,"outputs":[{"output_type":"stream","name":"stdout","text":["Empty DataFrame\n","Columns: [SID, SUBBASIN, HRU, LANDUSE, SOIL, SLOPE_CD, CROP, YEAR, MONTH, DAY, HUSC, MGT_OP, HEATUNITS, PLANT_ID, CURYR_MAT, LAI_INIT, BIO_INIT, HI_TARG, BIO_TARG, CNOP, IRR_AMT, FERT_ID, FRT_KG, FRT_SURFACE, PEST_ID, PST_KG, TILLAGE_ID, HARVEFF, HI_OVR, GRZ_DAYS, MANURE_ID, BIO_EAT, BIO_TRMP, MANURE_KG, WSTRS_ID, AUTO_WSTRS, AFERT_ID, AUTO_NSTRS, AUTO_NAPP, AUTO_NYR, AUTO_EFF, AFRT_SURFACE, SWEEPEFF, FR_CURB, IMP_TRIG, FERT_DAYS, CFRT_ID, IFRT_FREQ, CFRT_KG, PST_DEP, IHV_GBM, IRR_SALT, IRR_EFM, IRR_SQ, IRR_EFF, IRR_MX, IRR_ASQ, CPST_ID, PEST_DAYS, IPEST_FREQ, CPST_KG, BURN_FRLB, OP_NUM, IRR_SC, IRR_NO, IRR_SCA, IRR_NOA]\n","Index: []\n"]}]},{"cell_type":"code","source":["# avoid the mgt1 table building can't find the corresponding field\n","fillnacolumn = ['HUSC','MGT_OP','HEATUNITS','PLANT_ID',\n","                             'CURYR_MAT','LAI_INIT','BIO_INIT','HI_TARG',\n","                             'BIO_TARG','CNOP','IRR_AMT','FERT_ID','FRT_KG',\n","                             'FRT_SURFACE','PEST_ID','PST_KG','TILLAGE_ID',\n","                             'HARVEFF','HI_OVR','GRZ_DAYS','MANURE_ID',\n","                             'BIO_EAT','BIO_TRMP','MANURE_KG','WSTRS_ID',\n","                             'AUTO_WSTRS','AFERT_ID','AUTO_NSTRS','AUTO_NAPP',\n","                             'AUTO_NYR','AUTO_EFF','AFRT_SURFACE','SWEEPEFF',\n","                             'FR_CURB','IMP_TRIG','FERT_DAYS','CFRT_ID',\n","                             'IFRT_FREQ','CFRT_KG','PST_DEP','IHV_GBM',\n","                             'IRR_SALT','IRR_EFM','IRR_SQ','IRR_EFF','IRR_MX',\n","                             'IRR_ASQ','CPST_ID','PEST_DAYS','IPEST_FREQ',\n","                             'CPST_KG','BURN_FRLB','OP_NUM','IRR_SC','IRR_NO',\n","                             'IRR_SCA','IRR_NOA'] \n","for name in fillnacolumn:\n","  data[name] = data[name].fillna(0)\n","data"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":488},"id":"5gAb7otGjBJm","executionInfo":{"status":"ok","timestamp":1642727953818,"user_tz":360,"elapsed":209,"user":{"displayName":"YU LI","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"00575341658892833857"}},"outputId":"73bc656e-7a22-44ca-dc52-e15fd3483267"},"execution_count":22,"outputs":[{"output_type":"execute_result","data":{"text/html":["\n","  <div id=\"df-68bbb0bb-9178-494d-af39-3cd8556143bb\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>SID</th>\n","      <th>SUBBASIN</th>\n","      <th>HRU</th>\n","      <th>LANDUSE</th>\n","      <th>SOIL</th>\n","      <th>SLOPE_CD</th>\n","      <th>CROP</th>\n","      <th>YEAR</th>\n","      <th>MONTH</th>\n","      <th>DAY</th>\n","      <th>HUSC</th>\n","      <th>MGT_OP</th>\n","      <th>HEATUNITS</th>\n","      <th>PLANT_ID</th>\n","      <th>CURYR_MAT</th>\n","      <th>LAI_INIT</th>\n","      <th>BIO_INIT</th>\n","      <th>HI_TARG</th>\n","      <th>BIO_TARG</th>\n","      <th>CNOP</th>\n","      <th>IRR_AMT</th>\n","      <th>FERT_ID</th>\n","      <th>FRT_KG</th>\n","      <th>FRT_SURFACE</th>\n","      <th>PEST_ID</th>\n","      <th>PST_KG</th>\n","      <th>TILLAGE_ID</th>\n","      <th>HARVEFF</th>\n","      <th>HI_OVR</th>\n","      <th>GRZ_DAYS</th>\n","      <th>MANURE_ID</th>\n","      <th>BIO_EAT</th>\n","      <th>BIO_TRMP</th>\n","      <th>MANURE_KG</th>\n","      <th>WSTRS_ID</th>\n","      <th>AUTO_WSTRS</th>\n","      <th>AFERT_ID</th>\n","      <th>AUTO_NSTRS</th>\n","      <th>AUTO_NAPP</th>\n","      <th>AUTO_NYR</th>\n","      <th>AUTO_EFF</th>\n","      <th>AFRT_SURFACE</th>\n","      <th>SWEEPEFF</th>\n","      <th>FR_CURB</th>\n","      <th>IMP_TRIG</th>\n","      <th>FERT_DAYS</th>\n","      <th>CFRT_ID</th>\n","      <th>IFRT_FREQ</th>\n","      <th>CFRT_KG</th>\n","      <th>PST_DEP</th>\n","      <th>IHV_GBM</th>\n","      <th>IRR_SALT</th>\n","      <th>IRR_EFM</th>\n","      <th>IRR_SQ</th>\n","      <th>IRR_EFF</th>\n","      <th>IRR_MX</th>\n","      <th>IRR_ASQ</th>\n","      <th>CPST_ID</th>\n","      <th>PEST_DAYS</th>\n","      <th>IPEST_FREQ</th>\n","      <th>CPST_KG</th>\n","      <th>BURN_FRLB</th>\n","      <th>OP_NUM</th>\n","      <th>IRR_SC</th>\n","      <th>IRR_NO</th>\n","      <th>IRR_SCA</th>\n","      <th>IRR_NOA</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>CR16</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>CORN</td>\n","      <td>1</td>\n","      <td>5</td>\n","      <td>15</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>2200</td>\n","      <td>19</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>0</th>\n","      <td>CR16</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>1</td>\n","      <td>5</td>\n","      <td>15</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>27</td>\n","      <td>98.9</td>\n","      <td>0.8</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>0</th>\n","      <td>CR16</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>CORN</td>\n","      <td>1</td>\n","      <td>10</td>\n","      <td>13</td>\n","      <td>0</td>\n","      <td>5</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>0</th>\n","      <td>CR16</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>SOYB</td>\n","      <td>2</td>\n","      <td>5</td>\n","      <td>15</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>2153</td>\n","      <td>56</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>0</th>\n","      <td>CR16</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>2</td>\n","      <td>5</td>\n","      <td>15</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>27</td>\n","      <td>65.9</td>\n","      <td>0.8</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>0</th>\n","      <td>CRN2</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>1</td>\n","      <td>10</td>\n","      <td>14</td>\n","      <td>0</td>\n","      <td>6</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>58</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>4</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>0</th>\n","      <td>SYB2</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>SOYB</td>\n","      <td>1</td>\n","      <td>5</td>\n","      <td>15</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>2153</td>\n","      <td>56</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>0</th>\n","      <td>SYB2</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>1</td>\n","      <td>5</td>\n","      <td>15</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>27</td>\n","      <td>65.9</td>\n","      <td>0.8</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>0</th>\n","      <td>SYB2</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>SOYB</td>\n","      <td>1</td>\n","      <td>10</td>\n","      <td>7</td>\n","      <td>0</td>\n","      <td>5</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>0</th>\n","      <td>SYB2</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>1</td>\n","      <td>10</td>\n","      <td>14</td>\n","      <td>0</td>\n","      <td>6</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>58</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>4</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>822 rows × 67 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-68bbb0bb-9178-494d-af39-3cd8556143bb')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-68bbb0bb-9178-494d-af39-3cd8556143bb button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-68bbb0bb-9178-494d-af39-3cd8556143bb');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "],"text/plain":["     SID SUBBASIN  HRU LANDUSE SOIL  ... OP_NUM IRR_SC IRR_NO IRR_SCA IRR_NOA\n","0   CR16      NaN  NaN     NaN  NaN  ...      1      0      0       0       0\n","0   CR16      NaN  NaN     NaN  NaN  ...      2      0      0       0       0\n","0   CR16      NaN  NaN     NaN  NaN  ...      3      0      0       0       0\n","0   CR16      NaN  NaN     NaN  NaN  ...      1      0      0       0       0\n","0   CR16      NaN  NaN     NaN  NaN  ...      2      0      0       0       0\n","..   ...      ...  ...     ...  ...  ...    ...    ...    ...     ...     ...\n","0   CRN2      NaN  NaN     NaN  NaN  ...      4      0      0       0       0\n","0   SYB2      NaN  NaN     NaN  NaN  ...      1      0      0       0       0\n","0   SYB2      NaN  NaN     NaN  NaN  ...      2      0      0       0       0\n","0   SYB2      NaN  NaN     NaN  NaN  ...      3      0      0       0       0\n","0   SYB2      NaN  NaN     NaN  NaN  ...      4      0      0       0       0\n","\n","[822 rows x 67 columns]"]},"metadata":{},"execution_count":22}]},{"cell_type":"code","source":["data.to_csv('/content/gdrive/MyDrive/Colab Notebooks/croprotationschedule.csv', index=False)"],"metadata":{"id":"7F59xubxkerD","executionInfo":{"status":"ok","timestamp":1642727971744,"user_tz":360,"elapsed":468,"user":{"displayName":"YU LI","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"00575341658892833857"}}},"execution_count":23,"outputs":[]},{"cell_type":"code","metadata":{"id":"ZGCaANraaRen"},"source":["def plant(data, sid, crop, year):\n","  df = pd.DataFrame()\n","  df['SID'] = [sid]\n","  df['CROP'] = [crop]\n","  df['YEAR'] = [year]\n","  df['HUSC'] = [0.15]\n","  df['MGT_OP'] = [1] # plant\n","  pid = pidchecktable.loc[pidchecktable['CPNM'] == crop,'ICNUM'].values[0]\n","  if crop == 'CORN':\n","    heatunit = 2352 \n","    # May 15 to Nov 1\n","    # May 1 to September 30, 2200, so 2200 + 6.8*15 = 2148\n","  elif crop == 'SOYB':\n","    heatunit = 2200\n","    # May 15 to Oct 15\n","    # do the same as set\n","  else:\n","    heatunit = 1800\n","  df['HEATUNITS'] = heatunit\n","  df['PLANT_ID'] = [pid]\n","  df['WSTRS_ID'] = [1]\n","  df['AFERT_ID'] = [1]\n","  df['CFRT_ID'] = [1]\n","  df['CPST_ID'] = [1]\n","  df['OP_NUM'] = [1]\n","  return data.append(df)"],"execution_count":null,"outputs":[]},{"cell_type":"code","source":["def harvest(data, sid, crop, year):\n","  df = pd.DataFrame()\n","  df['SID'] = [sid]\n","  df['CROP'] = [crop]\n","  df['YEAR'] = [year]\n","  df['HUSC'] = [1.2]\n","  df['MGT_OP'] = [5] # harvest\n","  df['WSTRS_ID'] = [1]\n","  df['AFERT_ID'] = [1]\n","  df['CFRT_ID'] = [1]\n","  df['CPST_ID'] = [1]\n","  df['OP_NUM'] = [3]\n","  return data.append(df)"],"metadata":{"id":"-9qCD3x5APz5"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["def grazing(data, sid, year):\n","  df = pd.DataFrame()\n","  df['SID'] = [sid]\n","  df['YEAR'] = [year]\n","  df['MANURE_KG'] = [13.36]\n","  df['HUSC'] =[0.16]\n","  \n","  df['MGT_OP'] = [9] # grazing operation\n","  df['GRZ_DAYS'] = [210]\n","  df['MANURE_ID'] = [44] # Dairy fresh manure\n","  df['BIO_EAT'] = [8]\n","  df['BIO_TRMP'] = [3] # Data from Ohio beef cattle data\n","  df['OP_NUM'] = [2]\n","  return data.append(df)"],"metadata":{"id":"vk4_2xXf_9K4"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["yearrota = ['2012', '2013', '2014', '2015', '2016', '2017', '2018', '2019']\n","majorrotadairy = pd.DataFrame(un3[co3>75], columns = yearrota)\n","majorrotadairy = majorrotadairy.replace(dict(zip(lookup.value, lookup.landuse)))\n","for u in yearrota:\n","  print(majorrotadairy.iloc[[0]][u].values[0])\n","silagerotadairy = majorrotadairy.iloc[0:6].replace('CORN','CSIL')\n","majorrotadairy = majorrotadairy.append(silagerotadairy, ignore_index=True)\n","majorrotadairy\n","majorrotadairy.reindex([6,0,1,2,3,4,5,7,8,9,10,11,12])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":596},"id":"8YzY4qW3bP1V","executionInfo":{"status":"ok","timestamp":1639533116127,"user_tz":360,"elapsed":140,"user":{"displayName":"YU LI","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"00575341658892833857"}},"outputId":"a77fa1d5-ec71-4745-c910-c1f82e4855a4"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["CORN\n","CORN\n","CORN\n","CORN\n","CORN\n","CORN\n","ALFA\n","ALFA\n"]},{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>2012</th>\n","      <th>2013</th>\n","      <th>2014</th>\n","      <th>2015</th>\n","      <th>2016</th>\n","      <th>2017</th>\n","      <th>2018</th>\n","      <th>2019</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>6</th>\n","      <td>HAY</td>\n","      <td>HAY</td>\n","      <td>ALFA</td>\n","      <td>ALFA</td>\n","      <td>ALFA</td>\n","      <td>ALFA</td>\n","      <td>ALFA</td>\n","      <td>ALFA</td>\n","    </tr>\n","    <tr>\n","      <th>0</th>\n","      <td>CORN</td>\n","      <td>CORN</td>\n","      <td>CORN</td>\n","      <td>CORN</td>\n","      <td>CORN</td>\n","      <td>CORN</td>\n","      <td>ALFA</td>\n","      <td>ALFA</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>CORN</td>\n","      <td>CORN</td>\n","      <td>CORN</td>\n","      <td>SOYB</td>\n","      <td>CORN</td>\n","      <td>CORN</td>\n","      <td>PEAS</td>\n","      <td>ALFA</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>CORN</td>\n","      <td>SOYB</td>\n","      <td>CORN</td>\n","      <td>CORN</td>\n","      <td>SOYB</td>\n","      <td>WWHT</td>\n","      <td>ALFA</td>\n","      <td>ALFA</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>CORN</td>\n","      <td>PEAS</td>\n","      <td>WWHT</td>\n","      <td>CORN</td>\n","      <td>SOYB</td>\n","      <td>ALFA</td>\n","      <td>ALFA</td>\n","      <td>ALFA</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>SOYB</td>\n","      <td>CORN</td>\n","      <td>SOYB</td>\n","      <td>WWHT</td>\n","      <td>ALFA</td>\n","      <td>ALFA</td>\n","      <td>ALFA</td>\n","      <td>CORN</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>WWHT</td>\n","      <td>HAY</td>\n","      <td>ALFA</td>\n","      <td>ALFA</td>\n","      <td>CORN</td>\n","      <td>CORN</td>\n","      <td>SOYB</td>\n","      <td>CORN</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>CSIL</td>\n","      <td>CSIL</td>\n","      <td>CSIL</td>\n","      <td>CSIL</td>\n","      <td>CSIL</td>\n","      <td>CSIL</td>\n","      <td>ALFA</td>\n","      <td>ALFA</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>CSIL</td>\n","      <td>CSIL</td>\n","      <td>CSIL</td>\n","      <td>SOYB</td>\n","      <td>CSIL</td>\n","      <td>CSIL</td>\n","      <td>PEAS</td>\n","      <td>ALFA</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>CSIL</td>\n","      <td>SOYB</td>\n","      <td>CSIL</td>\n","      <td>CSIL</td>\n","      <td>SOYB</td>\n","      <td>WWHT</td>\n","      <td>ALFA</td>\n","      <td>ALFA</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>CSIL</td>\n","      <td>PEAS</td>\n","      <td>WWHT</td>\n","      <td>CSIL</td>\n","      <td>SOYB</td>\n","      <td>ALFA</td>\n","      <td>ALFA</td>\n","      <td>ALFA</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>SOYB</td>\n","      <td>CSIL</td>\n","      <td>SOYB</td>\n","      <td>WWHT</td>\n","      <td>ALFA</td>\n","      <td>ALFA</td>\n","      <td>ALFA</td>\n","      <td>CSIL</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>WWHT</td>\n","      <td>HAY</td>\n","      <td>ALFA</td>\n","      <td>ALFA</td>\n","      <td>CSIL</td>\n","      <td>CSIL</td>\n","      <td>SOYB</td>\n","      <td>CSIL</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["    2012  2013  2014  2015  2016  2017  2018  2019\n","6    HAY   HAY  ALFA  ALFA  ALFA  ALFA  ALFA  ALFA\n","0   CORN  CORN  CORN  CORN  CORN  CORN  ALFA  ALFA\n","1   CORN  CORN  CORN  SOYB  CORN  CORN  PEAS  ALFA\n","2   CORN  SOYB  CORN  CORN  SOYB  WWHT  ALFA  ALFA\n","3   CORN  PEAS  WWHT  CORN  SOYB  ALFA  ALFA  ALFA\n","4   SOYB  CORN  SOYB  WWHT  ALFA  ALFA  ALFA  CORN\n","5   WWHT   HAY  ALFA  ALFA  CORN  CORN  SOYB  CORN\n","7   CSIL  CSIL  CSIL  CSIL  CSIL  CSIL  ALFA  ALFA\n","8   CSIL  CSIL  CSIL  SOYB  CSIL  CSIL  PEAS  ALFA\n","9   CSIL  SOYB  CSIL  CSIL  SOYB  WWHT  ALFA  ALFA\n","10  CSIL  PEAS  WWHT  CSIL  SOYB  ALFA  ALFA  ALFA\n","11  SOYB  CSIL  SOYB  WWHT  ALFA  ALFA  ALFA  CSIL\n","12  WWHT   HAY  ALFA  ALFA  CSIL  CSIL  SOYB  CSIL"]},"metadata":{},"execution_count":112}]},{"cell_type":"code","source":["\n","siddairyroation = ['DRT0', 'DRT1', 'DRT2', 'DRT3', 'DRT4', 'DRT5',\n","                   'DRT6', 'DRT7', 'DRT8', 'DRT9', 'DRT10', 'DRT11']\n","warmupinclude = ['2018', '2019', '2012', '2013', '2014', '2015', '2016', '2017']\n","\n","for j in range(12):\n","  optyear = 1\n","  for year in warmupinclude:\n","    data = plant(data, siddairyroation[j], \n","                 majorrotadairy.iloc[[j]][year].values[0],\n","                 optyear)\n","    data = grazing(data, siddairyroation[j], optyear)\n","    data = harvest(data, siddairyroation[j],\n","                   majorrotadairy.iloc[[j]][year].values[0],\n","                   optyear)\n","    optyear = optyear + 1 \n"],"metadata":{"id":"6tvXW-H2U3EE"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["data[0:10]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":383},"id":"KvXUyUPzjnkq","executionInfo":{"status":"ok","timestamp":1639533139012,"user_tz":360,"elapsed":451,"user":{"displayName":"YU LI","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"00575341658892833857"}},"outputId":"4c7cf160-a2d7-4b9d-9995-62c7c58f1c37"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>SID</th>\n","      <th>SUBBASIN</th>\n","      <th>HRU</th>\n","      <th>LANDUSE</th>\n","      <th>SOIL</th>\n","      <th>SLOPE_CD</th>\n","      <th>CROP</th>\n","      <th>YEAR</th>\n","      <th>MONTH</th>\n","      <th>DAY</th>\n","      <th>HUSC</th>\n","      <th>MGT_OP</th>\n","      <th>HEATUNITS</th>\n","      <th>PLANT_ID</th>\n","      <th>CURYR_MAT</th>\n","      <th>LAI_INIT</th>\n","      <th>BIO_INIT</th>\n","      <th>HI_TARG</th>\n","      <th>BIO_TARG</th>\n","      <th>CNOP</th>\n","      <th>IRR_AMT</th>\n","      <th>FERT_ID</th>\n","      <th>FRT_KG</th>\n","      <th>FRT_SURFACE</th>\n","      <th>PEST_ID</th>\n","      <th>PST_KG</th>\n","      <th>TILLAGE_ID</th>\n","      <th>HARVEFF</th>\n","      <th>HI_OVR</th>\n","      <th>GRZ_DAYS</th>\n","      <th>MANURE_ID</th>\n","      <th>BIO_EAT</th>\n","      <th>BIO_TRMP</th>\n","      <th>MANURE_KG</th>\n","      <th>WSTRS_ID</th>\n","      <th>AUTO_WSTRS</th>\n","      <th>AFERT_ID</th>\n","      <th>AUTO_NSTRS</th>\n","      <th>AUTO_NAPP</th>\n","      <th>AUTO_NYR</th>\n","      <th>AUTO_EFF</th>\n","      <th>AFRT_SURFACE</th>\n","      <th>SWEEPEFF</th>\n","      <th>FR_CURB</th>\n","      <th>IMP_TRIG</th>\n","      <th>FERT_DAYS</th>\n","      <th>CFRT_ID</th>\n","      <th>IFRT_FREQ</th>\n","      <th>CFRT_KG</th>\n","      <th>PST_DEP</th>\n","      <th>IHV_GBM</th>\n","      <th>IRR_SALT</th>\n","      <th>IRR_EFM</th>\n","      <th>IRR_SQ</th>\n","      <th>IRR_EFF</th>\n","      <th>IRR_MX</th>\n","      <th>IRR_ASQ</th>\n","      <th>CPST_ID</th>\n","      <th>PEST_DAYS</th>\n","      <th>IPEST_FREQ</th>\n","      <th>CPST_KG</th>\n","      <th>BURN_FRLB</th>\n","      <th>OP_NUM</th>\n","      <th>IRR_SC</th>\n","      <th>IRR_NO</th>\n","      <th>IRR_SCA</th>\n","      <th>IRR_NOA</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>DRT0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>ALFA</td>\n","      <td>1</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0.15</td>\n","      <td>1</td>\n","      <td>1800</td>\n","      <td>52</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>1</td>\n","      <td>NaN</td>\n","      <td>1</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>1</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>1</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>1</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>0</th>\n","      <td>DRT0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>1</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0.16</td>\n","      <td>9</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>210</td>\n","      <td>44</td>\n","      <td>8</td>\n","      <td>3</td>\n","      <td>13.36</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>2</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>0</th>\n","      <td>DRT0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>ALFA</td>\n","      <td>1</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>1.20</td>\n","      <td>5</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>1</td>\n","      <td>NaN</td>\n","      <td>1</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>1</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>1</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>3</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>0</th>\n","      <td>DRT0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>ALFA</td>\n","      <td>2</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0.15</td>\n","      <td>1</td>\n","      <td>1800</td>\n","      <td>52</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>1</td>\n","      <td>NaN</td>\n","      <td>1</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>1</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>1</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>1</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>0</th>\n","      <td>DRT0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>2</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0.16</td>\n","      <td>9</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>210</td>\n","      <td>44</td>\n","      <td>8</td>\n","      <td>3</td>\n","      <td>13.36</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>2</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>0</th>\n","      <td>DRT0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>ALFA</td>\n","      <td>2</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>1.20</td>\n","      <td>5</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>1</td>\n","      <td>NaN</td>\n","      <td>1</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>1</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>1</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>3</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>0</th>\n","      <td>DRT0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>CORN</td>\n","      <td>3</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0.15</td>\n","      <td>1</td>\n","      <td>2352</td>\n","      <td>19</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>1</td>\n","      <td>NaN</td>\n","      <td>1</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>1</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>1</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>1</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>0</th>\n","      <td>DRT0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>3</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0.16</td>\n","      <td>9</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>210</td>\n","      <td>44</td>\n","      <td>8</td>\n","      <td>3</td>\n","      <td>13.36</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>2</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>0</th>\n","      <td>DRT0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>CORN</td>\n","      <td>3</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>1.20</td>\n","      <td>5</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>1</td>\n","      <td>NaN</td>\n","      <td>1</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>1</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>1</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>3</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>0</th>\n","      <td>DRT0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>CORN</td>\n","      <td>4</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0.15</td>\n","      <td>1</td>\n","      <td>2352</td>\n","      <td>19</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>1</td>\n","      <td>NaN</td>\n","      <td>1</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>1</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>1</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>1</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["    SID SUBBASIN  HRU LANDUSE SOIL  ... OP_NUM IRR_SC IRR_NO IRR_SCA IRR_NOA\n","0  DRT0      NaN  NaN     NaN  NaN  ...      1    NaN    NaN     NaN     NaN\n","0  DRT0      NaN  NaN     NaN  NaN  ...      2    NaN    NaN     NaN     NaN\n","0  DRT0      NaN  NaN     NaN  NaN  ...      3    NaN    NaN     NaN     NaN\n","0  DRT0      NaN  NaN     NaN  NaN  ...      1    NaN    NaN     NaN     NaN\n","0  DRT0      NaN  NaN     NaN  NaN  ...      2    NaN    NaN     NaN     NaN\n","0  DRT0      NaN  NaN     NaN  NaN  ...      3    NaN    NaN     NaN     NaN\n","0  DRT0      NaN  NaN     NaN  NaN  ...      1    NaN    NaN     NaN     NaN\n","0  DRT0      NaN  NaN     NaN  NaN  ...      2    NaN    NaN     NaN     NaN\n","0  DRT0      NaN  NaN     NaN  NaN  ...      3    NaN    NaN     NaN     NaN\n","0  DRT0      NaN  NaN     NaN  NaN  ...      1    NaN    NaN     NaN     NaN\n","\n","[10 rows x 67 columns]"]},"metadata":{},"execution_count":115}]},{"cell_type":"code","source":["data.to_csv('/content/gdrive/MyDrive/Colab Notebooks/dairyrotationschedule.csv', index=False)"],"metadata":{"id":"OuikBlYQlh-2"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Write corn and soybean one (or just use the operation schedule developed in baseline!"],"metadata":{"id":"EAUVAeJhUzz7"}},{"cell_type":"code","source":["sidtype = ['CRN1', 'CRN2', 'CRN3', 'CRN4', 'CRN5', 'CRN6',\n","           'SYB1', 'SYB2', 'SYB3', 'SYB4', 'SYB5', 'SYB6']\n","for j in range(12):\n","  data = manapp(data,sidtype[j],1)\n","  if j < 6:\n","    croptype = 'CORN'\n","  else:\n","    croptype = 'SOYB'\n","  data = plantcs(data, sidtype[j],croptype, 1)\n","  data = startfert(data, sidtype[j],1)\n","  data = harvestcs(data, sidtype[j], croptype, 1)\n","  if j == 1 or j == 3 or j == 5 or j == 7 or j == 9 or j == 11:\n","    data = tillagecs(data, sidtype[j], croptype, 1)\n","  if j == 2 or j == 8:\n","    data = wintercover(data, sidtype[j], 'RYE', 1, 5)\n","  elif j == 3 or j == 9:\n","    data = wintercover(data, sidtype[j], 'RYE', 1, 6)\n","  elif j == 4 or j == 10:\n","    data = wintercover(data, sidtype[j], 'WWHT', 1, 5)\n","  elif j == 5 or j == 15:\n","    data = wintercover(data, sidtype[j], 'WWHT', 1, 6)\n","  else:\n","    continue"],"metadata":{"id":"WHF4ph5JUFRS"},"execution_count":null,"outputs":[]}]}